plugins {
    id 'java-library'
    id 'io.qameta.allure' version "2.9.6"
}

repositories {
    mavenCentral()
}
allure {
    report {
        version.set("2.17.3") //версия Allure Report (https://github.com/allure-framework/allure2)
    }
    adapter {
        aspectjWeaver.set(true) // обработка аннотации @Step
        frameworks {
            junit5 {
                adapterVersion.set("2.17.3") //версия Allure JUnit5 (https://github.com/allure-framework/allure-java)
            }
        }
    }
}

def allureVersion = "2.19.0"

dependencies {
    testImplementation(
            "com.codeborne:selenide:7.6.0",
            "org.junit.jupiter:junit-jupiter:5.9.3",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "com.github.javafaker:javafaker:1.0.2",
            'org.aspectj:aspectjtools:1.9.9',
            'org.aeonbits.owner:owner:1.0.12',
//           REST API dependencies
            'io.rest-assured:rest-assured:5.5.0',
            'com.google.code.gson:gson:2.11.0',
            'org.assertj:assertj-core:3.26.3',
            "io.qameta.allure:allure-rest-assured:$allureVersion"
    )
}

tasks.withType(Test).configureEach {
    systemProperties(System.getProperties())
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

tasks.register('simple_test', Test) {
    useJUnitPlatform {
        includeTags("simple")
    }
}

tasks.register('positive_test', Test) {
    useJUnitPlatform {
        includeTags("positive")
    }
}
tasks.register('negative_test', Test) {
    useJUnitPlatform {
        includeTags("negative")
    }
}
tasks.register('ignored_test', Test) {
    useJUnitPlatform {
        includeTags("ignored")
    }
}
tasks.register('UI', Test) {
    useJUnitPlatform {
        includeTags("UI")
    }
}